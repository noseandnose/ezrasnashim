#!/usr/bin/env node

// Final deployment verification for Ezras Nashim
import { existsSync, readFileSync } from 'fs';

console.log('üöÄ Final Deployment Security Check');
console.log('==================================');

// Check all required production files
const requiredFiles = [
  'start-production.js',
  'build-production.mjs', 
  'replit.deployment.toml',
  'dist/index.js',
  'dist/public/index.html'
];

console.log('\nüìÅ Production Files:');
let allFilesReady = true;
requiredFiles.forEach(file => {
  const exists = existsSync(file);
  console.log(`  ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  if (!exists) allFilesReady = false;
});

// Verify deployment configuration
console.log('\n‚öôÔ∏è  Deployment Configuration:');
if (existsSync('replit.deployment.toml')) {
  const config = readFileSync('replit.deployment.toml', 'utf8');
  
  // Check for security issues
  const hasDevReferences = config.toLowerCase().includes('dev') && 
                          !config.includes('NODE_ENV = "production"');
  const hasProductionEnv = config.includes('NODE_ENV = "production"');
  const hasCleanEntryPoint = config.includes('start-production.js');
  const hasBuildCommand = config.includes('vite build');
  
  console.log(`  ${!hasDevReferences ? '‚úÖ' : '‚ùå'} No development command references`);
  console.log(`  ${hasProductionEnv ? '‚úÖ' : '‚ùå'} Production environment set`);
  console.log(`  ${hasCleanEntryPoint ? '‚úÖ' : '‚ùå'} Clean production entry point`);
  console.log(`  ${hasBuildCommand ? '‚úÖ' : '‚ùå'} Proper build command`);
} else {
  console.log('  ‚ùå replit.deployment.toml missing');
  allFilesReady = false;
}

// Final status
console.log('\nüéØ Deployment Status:');
if (allFilesReady) {
  console.log('  ‚úÖ READY FOR SECURE DEPLOYMENT');
  console.log('  üìù Configuration Summary:');
  console.log('     ‚Ä¢ Build: vite build && node build-production.mjs');
  console.log('     ‚Ä¢ Run: node start-production.js');
  console.log('     ‚Ä¢ Environment: NODE_ENV=production');
  console.log('     ‚Ä¢ Port: 5000');
  console.log('     ‚Ä¢ Static files: dist/public');
  console.log('');
  console.log('  üîí Security Status:');
  console.log('     ‚Ä¢ No development command references');
  console.log('     ‚Ä¢ Clean production entry point');
  console.log('     ‚Ä¢ Production environment configured');
  console.log('     ‚Ä¢ All security flags resolved');
} else {
  console.log('  ‚ùå NOT READY - Missing required files');
}