name: Deploy to Amazon ECS

on:
  push:
    branches: [ "staging" ]

env:
  AWS_REGION: eu-central-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ezras-nashim-staging  # set this to your Amazon ECR repository name
  ECS_SERVICE: ezras_nashim_staging-service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: ezras-nashim-cluster  # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: devops/ecs_task_definition_staging.json # set this to the path to your Amazon ECS task definition
  # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: api           # set this to the name of the container in the
  # containerDefinitions section of your task definition

permissions:
  contents: read
  id-token: write


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: arn:aws:iam::551437426075:role/GitHub-OIDC-Policy
          aws-region: "eu-central-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: ./
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f dockerfiles/server.Dockerfile --cache-to type=gha  --cache-from type=gha .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: ezras_nashim_staging
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}There was an error updating Service. The provided target group arn:aws:elasticloadbalancing:eu-central-1:551437426075:targetgroup/ezras-nashim-staging1/79e9757173477b09 has target type instance, which is incompatible with the awsvpc network mode specified in the task definition.

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true